{"version":3,"sources":["components/Expenses/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Expenses/ExpensesFilter.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["ExpenseDate","props","month","date","toLocaleDateString","day","year","getFullYear","className","Card","classes","children","ExpenseItem","title","amount","ExpensesList","listOfExpenses","length","map","expense","id","ExpensesFilter","onChange","onChangeFilterYear","value","CartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","arrayOfValue","dataPoints","el","maximum","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","useState","enteredFilterYear","setNewYear","filteredExpenses","dataArray","filter","toString","currentYear","event","target","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","placeholder","min","step","onClick","onCancel","NewExpense","isEditing","setEditing","enteredExpenseData","floor","random","onAddExpense","INITIAL_EXPENSES","App","setNewExpenses","newExpense","console","log","prevExpensesState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6b928f9d.chunk.js","sourcesContent":["import \"./ExpenseDate.css\";\r\n\r\nfunction ExpenseDate(props) {\r\n  const month = props.date.toLocaleDateString(\"en-US\", { month: \"long\" });\r\n  const day = props.date.toLocaleDateString(\"en-US\", { day: \"2-digit\" });\r\n  const year = props.date.getFullYear();\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseDate;\r\n","import \"./Card.css\";\r\n\r\nfunction Card(props) {\r\n  const classes = `card ${props.className}`;\r\n  return <div className={classes}>{props.children}</div>;\r\n}\r\n\r\nexport default Card;\r\n","import ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"../UI/Card.js\";\r\nimport \"./ExpenseItem.css\";\r\n\r\nfunction ExpenseItem(props) {\r\n  return (\r\n    <li>\r\n      <Card className=\"expense-item\">\r\n        <ExpenseDate date={props.date} />\r\n        <div className=\"expense-item__description\">\r\n          <h2>{props.title}</h2>\r\n          <div className=\"expense-item__price\">${props.amount}</div>\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ExpenseItem;\r\n","import ExpenseItem from \"./ExpenseItem\";\r\nimport \"./ExpensesList.css\";\r\n\r\nfunction ExpensesList(props) {\r\n  if (props.listOfExpenses.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback\">Found no expenses</h2>;\r\n  }\r\n\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {props.listOfExpenses.map((expense) => {\r\n        return (\r\n          <ExpenseItem\r\n            key={expense.id}\r\n            title={expense.title}\r\n            amount={expense.amount}\r\n            date={expense.date}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default ExpensesList;\r\n","import \"./ExpensesFilter.css\";\r\n\r\nfunction ExpensesFilter(props) {\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select onChange={props.onChangeFilterYear}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpensesFilter;\r\n","import \"./ChartBar.css\";\r\n\r\nfunction CartBar(props) {\r\n  let barFillHeight = \"0%\";\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n  }\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <label className=\"chart-bar__label \">{props.label}</label>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CartBar;\r\n","import ChartBar from \"./ChartBar\";\r\nimport \"./Chart.css\";\r\n\r\nfunction Chart(props) {\r\n  const arrayOfValue = props.dataPoints.map((el) => {\r\n    return el.value;\r\n  });\r\n  const maximum = Math.max(...arrayOfValue);\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoints) => {\r\n        return (\r\n          <ChartBar\r\n            key={dataPoints.label}\r\n            value={dataPoints.value}\r\n            maxValue={maximum}\r\n            label={dataPoints.label}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chart;\r\n","import Chart from \"../Chart/Chart\";\r\n\r\nfunction ExpensesChart(props) {\r\n  const chartDataPoints = [\r\n    { label: \"Jan\", value: 0 },\r\n    { label: \"Feb\", value: 0 },\r\n    { label: \"Mar\", value: 0 },\r\n    { label: \"Apr\", value: 0 },\r\n    { label: \"May\", value: 0 },\r\n    { label: \"Jun\", value: 0 },\r\n    { label: \"Jul\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"Sep\", value: 0 },\r\n    { label: \"Oct\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"Dec\", value: 0 },\r\n  ];\r\n\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth();\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n}\r\n\r\nexport default ExpensesChart;\r\n","import React, { useState } from \"react\";\r\n\r\nimport ExpensesList from \"./ExpensesList.js\";\r\nimport ExpensesFilter from \"./ExpensesFilter.js\";\r\nimport Card from \"../UI/Card.js\";\r\nimport ExpensesChart from \"./ExpensesChart.js\";\r\nimport \"./Expenses.css\";\r\n\r\nfunction Expenses(props) {\r\n  const [enteredFilterYear, setNewYear] = useState(\"2022\");\r\n\r\n  const saveExpensesFilterYearHandler = (event) => {\r\n    setNewYear(event.target.value);\r\n  };\r\n\r\n  const filteredExpenses = props.dataArray.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === enteredFilterYear;\r\n  });\r\n\r\n  return (\r\n    <Card className=\"expenses\">\r\n      <ExpensesFilter\r\n        currentYear={enteredFilterYear}\r\n        onChangeFilterYear={saveExpensesFilterYearHandler}\r\n      />\r\n      <ExpensesChart expenses={filteredExpenses} />\r\n      <ExpensesList listOfExpenses={filteredExpenses} />\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Expenses;\r\n","import React, { useState } from \"react\";\r\n\r\nimport \"./ExpenseForm.css\";\r\n\r\nfunction ExpenseForm(props) {\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n\r\n  // console.log(enteredTitle, enteredAmount, enteredDate);\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n  };\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n  };\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n    props.onSaveExpenseData(expenseData);\r\n    setEnteredTitle(\"\");\r\n    setEnteredAmount(\"\");\r\n    setEnteredDate(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            value={enteredTitle}\r\n            placeholder={\"Name\"}\r\n            onChange={titleChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            placeholder={\"0,01\"}\r\n            value={enteredAmount}\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n            value={enteredDate}\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"button\" onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button type=\"submit\">Add expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ExpenseForm;\r\n","import React, { useState } from \"react\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\n\r\nimport \"./NewExpense.css\";\r\nfunction NewExpense(props) {\r\n  const [isEditing, setEditing] = useState(false);\r\n\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.floor(Math.random() * 1000).toString(), // should be improved\r\n    };\r\n    props.onAddExpense(expenseData);\r\n  };\r\n\r\n  const startEditingHandler = () => {\r\n    setEditing(true);\r\n  };\r\n\r\n  const stopEditingHandler = () => {\r\n    setEditing(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!isEditing && (\r\n        <button onClick={startEditingHandler}>Add new Expense</button>\r\n      )}\r\n      {isEditing && (\r\n        <ExpenseForm\r\n          onSaveExpenseData={saveExpenseDataHandler}\r\n          onCancel={stopEditingHandler}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewExpense;\r\n","import React, { useState } from \"react\";\n\nimport Expenses from \"./components//Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst INITIAL_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nfunction App() {\n  const [expenses, setNewExpenses] = useState(INITIAL_EXPENSES);\n  const addExpenseHandler = (newExpense) => {\n    console.log(newExpense.id);\n    setNewExpenses((prevExpensesState) => {\n      return [newExpense, ...prevExpensesState];\n    });\n  };\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses dataArray={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}